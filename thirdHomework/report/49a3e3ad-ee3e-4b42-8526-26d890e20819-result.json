{"name": "添加成员测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"qui_btn ww_btn js_add_member\" href=\"javascript:;\">...</a> is not clickable at point (323, 500). Other element would receive the click: <span>...</span>\n  (Session info: chrome=87.0.4280.88)", "trace": "self = <test_wework.Test_weworkClass object at 0x00000179823F9F10>\n\n    @allure.title(\"添加成员测试\")\n    def test_add_member(self):\n        with open(\"add_number.yaml\") as f:\n            add_number_datas = yaml.safe_load(f)\n            for add_number_data in add_number_datas:\n                user_name = add_number_data[\"username\"]\n                acct_id = add_number_data[\"acct_id\"]\n                phone = add_number_data[\"phone\"]\n                with allure.step(\"步骤一：输入用户名\"):\n                    self.driver.find_element_by_id(\"username\").send_keys(user_name)\n                    sleep(2)\n                with allure.step(\"步骤二：输入账号\"):\n                    self.driver.find_element_by_id(\"memberAdd_acctid\").send_keys(acct_id)\n                    sleep(2)\n                with allure.step(\"步骤三：输入手机\"):\n                    self.driver.find_element_by_id(\"memberAdd_phone\").send_keys(phone)\n                    sleep(2)\n                with allure.step(\"步骤四：把页面拖拖到底部\"):\n                    # 把页面拖到底部\n                    self.driver.execute_script(\"window.scrollTo(0,document.body.scrollHeight)\")\n                    sleep(2)\n                with allure.step(\"步骤五：点击保存按钮\"):\n                    self.driver.find_elements_by_css_selector(\"a.qui_btn.ww_btn.js_btn_save\")[1].click()\n                    sleep(2)\n                with allure.step(\"步骤六：断言是否保存成功\"):\n                    # 断言是否存在“保存成功”\n                    assert u\"保存成功\" == self.driver.find_element_by_id(\"js_tips\").text\n                # 进入通讯录页面\n                self.driver.get(\"https://work.weixin.qq.com/wework_admin/frame#contacts\")\n                sleep(5)\n                # 点击添加成员按钮\n>               self.driver.find_elements_by_css_selector(\"a.qui_btn.ww_btn.js_add_member\")[2].click()\n\ntest_wework.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:633: in _execute\n    return self._parent.execute(command, params)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017982447640>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x775E8944+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x775E8914+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"qui_btn ww_btn js_add_member\" href=\"javascript:;\">...</a> is not clickable at point (323, 500). Other element would receive the click: <span>...</span>\nE         (Session info: chrome=87.0.4280.88)\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: ElementClickInterceptedException"}, "steps": [{"name": "步骤一：输入用户名", "status": "passed", "start": 1608354841845, "stop": 1608354844110}, {"name": "步骤二：输入账号", "status": "passed", "start": 1608354844110, "stop": 1608354846199}, {"name": "步骤三：输入手机", "status": "passed", "start": 1608354846199, "stop": 1608354848280}, {"name": "步骤四：把页面拖拖到底部", "status": "passed", "start": 1608354848280, "stop": 1608354850289}, {"name": "步骤五：点击保存按钮", "status": "passed", "start": 1608354850289, "stop": 1608354852361}, {"name": "步骤六：断言是否保存成功", "status": "passed", "start": 1608354852361, "stop": 1608354852393}, {"name": "步骤一：输入用户名", "status": "passed", "start": 1608354858007, "stop": 1608354860187}, {"name": "步骤二：输入账号", "status": "passed", "start": 1608354860187, "stop": 1608354862295}, {"name": "步骤三：输入手机", "status": "passed", "start": 1608354862295, "stop": 1608354864391}, {"name": "步骤四：把页面拖拖到底部", "status": "passed", "start": 1608354864391, "stop": 1608354866399}, {"name": "步骤五：点击保存按钮", "status": "passed", "start": 1608354866399, "stop": 1608354868474}, {"name": "步骤六：断言是否保存成功", "status": "passed", "start": 1608354868474, "stop": 1608354868497}], "start": 1608354841840, "stop": 1608354875060, "uuid": "ae0a8a1a-bfde-456d-98db-14b5e7a906c3", "historyId": "975cbfe99b058c9a5b260cb066edcb11", "testCaseId": "68c0fe5ff866a576db48bd1fc9c00d06", "fullName": "thirdHomework.test_wework.Test_weworkClass#test_add_member", "labels": [{"name": "parentSuite", "value": "thirdHomework"}, {"name": "suite", "value": "test_wework"}, {"name": "subSuite", "value": "Test_weworkClass"}, {"name": "host", "value": "DESKTOP-MODN6H0"}, {"name": "thread", "value": "19148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "thirdHomework.test_wework"}]}